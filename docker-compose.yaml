services:
  frontend:
    build: ./alertsDisplayApp
    platforms:
      - linux/amd64
      - linux/arm64
  
    container_name: frontend_c
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    volumes:
      - ./alertsDisplayApp:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  backend:
    build: ./backend
    container_name:  
    platforms:
      - linux/amd64
      - linux/arm64
    ports:
      - "6543:6543"

    networks:
      - mynetwork    
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: db_c
    restart: always

    volumes:
      - /Users/wilson/Library/Application Support/Postgres/var-16:/var/lib/postgresql/data
    expose:
      - "5432"  
    ports:
      - 5432:5432
    networks:
      - mynetwork

    healthcheck:
      #CHANGE 1: this command checks if the database is ready, right on the source db server
      test:  pg_isready -h localhost -U wilson
      interval: 5s
      timeout: 5s
      retries: 5
        
    env_file:
      - ./backend/.env.postgres

networks:
  mynetwork:
    driver: bridge

    # set shared memory limit when using docker-compose
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb


